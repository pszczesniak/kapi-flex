
body {
    margin: 0;
    padding: 0;
    overflow-x: hidden;
}

.grid {
    display: flex;
    flex-flow: wrap row;
    align-items: stretch;
    margin: 0 (-$marginGap/2);
    justify-content: flex-start;
    width: calc(100% + #{$marginGap});

    > [class*="col-"] {
        margin: 0 ($marginGap/2) $marginGap ($marginGap/2);
    }

    &__spacer {
        flex-grow: 1;
    }

    &--top {
        align-items: flex-start;
    }

    &--middle {
        align-items: center;
    }

    &--baseline {
        align-items: baseline;
    }

    &--bottom {
        align-items: flex-end;
    }

    &--reverse {
        flex-direction: row-reverse;

        &.grid--column {
            flex-direction: column-reverse;
        }
    }

    &--center {
        justify-content: center;
    }

    &--end {
        justify-content: flex-end;
    }

    &--start {
        align-items: flex-start;
    }

    &--around {
        justify-content: space-around;
    }

    &--between {
        justify-content: space-between;
    }

    &--side-gaps {
        width: calc(100% - #{$marginGap} );
        margin: 0 auto;
    }

    @each $gap in $column_gap {
        $gappx: #{$gap}px;
        $gappx_double: #{$gap * 1.5}px;
        $gappx_half: #{$gap / 2}px;

        &--#{$gap;} {
            margin: 0 -$gappx_half;
            width: calc(100% + #{$gappx});

            &.grid--side-gaps {
                width: calc(100% - #{$gappx});
                margin: 0 auto;
            }

            > .grid {
                width: calc(100% + #{$gappx});
                margin: 0 -$gappx_half;
            }

            justify-content: space-between;

            > [class*="col-"] {
                margin: 0 $gappx_half #{$gappx} $gappx_half;
            }

            @each $name, $bp_size in $breakpoints_names {
                @media screen and (min-width:  $bp_size) {
                    @each $number in $columns_numbers {
                        $calculatedWidth: percentage($number/12);

                        @if $number == 12 {
                            > .col-#{$name}-12 {
                                max-width: 100%;
                                flex-basis: 100%;
                                width: 100%;
                            }
                        } @else {
                            > .col-#{$name}-#{$number} {
                                max-width: calc( #{$calculatedWidth} - #{$gappx});
                                flex-basis: calc( #{$calculatedWidth} - #{$gappx});
                                width: calc( #{$calculatedWidth} - #{$gappx});
                            }
                        }
                    }
                }
            }
        }
    }
}

@each $name, $bp_size in $breakpoints_names {
    @media screen and (min-width:  $bp_size) {
        @each $number in $columns_numbers {
            $calculatedWidth: percentage($number/12);

            @if ($number == 12) {
                .col-#{$name}-12 {
                    max-width: 100%;
                    flex-basis: 100%;
                    width: 100%;
                }
            } @else {
                .col-#{$name}-#{$number} {
                    max-width: calc( #{$calculatedWidth} - #{$marginGap});
                    flex-basis: calc( #{$calculatedWidth} - #{$marginGap});
                    width: calc( #{$calculatedWidth} - #{$marginGap});
                }

                .grid .col-push-#{$name}-#{$number} {
                    margin-left: calc(#{$calculatedWidth} + #{$marginGap}/2);
                }

                .grid .col-pull-#{$name}-#{$number} {
                    margin-right: calc(#{$calculatedWidth} + #{$marginGap}/2);
                }
            }
        }

        .col-#{$name} {
            flex-basis: 0;
            flex-grow: 1;
            max-width: 100%;
        }

        .col-#{$name}-top {
            align-self: flex-start;
        }

        .col-#{$name}-middle {
            align-self: center;
        }

        .col-#{$name}-baseline {
            align-self: baseline;
        }

        .col-#{$name}-bottom {
            align-self: flex-end;
        }

        .col-#{$name}-first {
            order: -1;
        }

        .col-#{$name}-last {
            order: 1;
        }
        
        .col-#{$name}-spacer {
            flex-grow: 1;
        }

        .grid--#{$name}-top {
            align-items: flex-start;
        }

        .grid--#{$name}-middle {
            align-items: center;
        }

        .grid--#{$name}-baseline {
            align-items: baseline;
        }

        .grid--#{$name}-bottom {
            align-items: flex-end;
        }

        .grid--#{$name}-reverse {
            flex-direction: row-reverse;

            &.grid--column {
                flex-direction: column-reverse;
            }
        }

        .grid--#{$name}-center {
            justify-content: center;
        }

        .grid--#{$name}-end {
            justify-content: flex-end;
        }

        .grid--#{$name}-start {
            align-items: flex-start;
        }

        .grid--#{$name}-around {
            justify-content: space-around;
        }

        .grid--#{$name}-between {
            justify-content: space-between;
        }

        .grid--#{$name}-side-gaps {
            width: calc(100% - #{$marginGap} );
            margin: 0 auto;
        }
    }
}

.col {
    &-top {
        align-self: flex-start;
    }

    &-middle {
        align-self: center;
    }

    &-baseline {
        align-self: baseline;
    }

    &-bottom {
        align-self: flex-end;
    }

    &-first {
        order: -1;
    }

    &-last {
        order: 1;
    }
    
    &-spacer {
        flex-grow: 1;
    }
}
